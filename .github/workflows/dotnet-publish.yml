name: .net Publish

on:
  push:
    tags: [ "release/*" ]
  workflow_dispatch:
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    # Publish framework dependant
    - name: Publish linux-x64
      run: dotnet publish --configuration Release --output ./publish/L64 --runtime linux-x64  --self-contained false -p:PublishSingleFile=true -nologo
    
    - name: Publish linux-arm
      run: dotnet publish --configuration Release --output ./publish/Larm --runtime linux-arm  --self-contained false -p:PublishSingleFile=true -nologo

    - name: Publish linux-arm64
      run: dotnet publish --configuration Release --output ./publish/Larm64 --runtime linux-arm64  --self-contained false -p:PublishSingleFile=true -nologo

    - name: Publish osx-x64
      run: dotnet publish --configuration Release --output ./publish/osx --runtime osx-x64  --self-contained false -p:PublishSingleFile=true -nologo

    - name: Publish win-x64
      run: dotnet publish --configuration Release --output ./publish/W64 --runtime win-x64  --self-contained false -p:PublishSingleFile=true -nologo

    # Publish fully contained
    - name: Publish linux-x64
      run: dotnet publish --configuration Release --output ./publish/L64-contained --runtime linux-x64  --self-contained true -p:PublishTrimmed=true  -p:PublishSingleFile=true -nologo
    
    - name: Publish linux-arm
      run: dotnet publish --configuration Release --output ./publish/Larm-contained --runtime linux-arm  --self-contained true -p:PublishTrimmed=true -p:PublishSingleFile=true -nologo

    - name: Publish linux-arm64
      run: dotnet publish --configuration Release --output ./publish/Larm64-contained --runtime linux-arm64  --self-contained true -p:PublishTrimmed=true -p:PublishSingleFile=true -nologo

    - name: Publish osx-x64
      run: dotnet publish --configuration Release --output ./publish/osx-contained --runtime osx-x64  --self-contained true -p:PublishTrimmed=true -p:PublishSingleFile=true -nologo

    - name: Publish win-x64
      run: dotnet publish --configuration Release --output ./publish/W64-contained --runtime win-x64  --self-contained true -p:PublishTrimmed=true -p:PublishSingleFile=true -nologo

    # This should probably be done with javascript
    - name: Rename linux releases
      run: mv ./publish/L64/rnd ./publish/L64/rnd-linux64 && mv ./publish/Larm/rnd ./publish/Larm/rnd-linux-arm && mv ./publish/Larm64/rnd ./publish/Larm64/rnd-linux-arm64 && mv ./publish/L64-contained/rnd ./publish/L64-contained/rnd-linux64-contained && mv ./publish/Larm-contained/rnd ./publish/Larm-contained/rnd-linux-arm-contained && mv ./publish/Larm64-contained/rnd ./publish/Larm64-contained/rnd-linux-arm64-contained
    - name: Rename osx releases
      run: mv ./publish/osx/rnd ./publish/osx/rnd-osx && mv ./publish/osx-contained/rnd ./publish/osx-contained/rnd-osx-contained
    - name: Rename windows releases
      run: mv ./publish/win64/rnd.exe ./publish/win64/rnd-win64.exe && mv ./publish/win64-contained/rnd.exe ./publish/win64-contained/rnd-win64-contained.exe
    
    # Upload the published files to the release
    - name: Upload Release
      uses: softprops/action-gh-release@v1
      # Only run this if it is a tag
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ./publush/L64/rnd-linux-64
          ./publush/Larm/rnd-linux-arm
          ./publush/Larm64/rnd-linux-arm64
          ./publush/L64-contained/rnd-linux64-contained
          ./publush/Larm-contained/rnd-linux-arm-contained
          ./publush/Larm64-contained/rnd-linux-arm64-contained
          ./publush/osx/rnd-osx
          ./publush/osx-contained/rnd-osx-contained
          ./publush/win64/rnd-win64.exe
          ./publush/win64-contained/rnd-win64-contained.exe
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    # Upload the artifacts to the build
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: published-binaries
        path: |
          ./publish/**/*
          !./publish/**/*.pdb
        
